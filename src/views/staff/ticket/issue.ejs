<%- include('../../layouts/staff-header.ejs') %>
<div class="content-page">
                <div class="content">

                    <div class="container-fluid">

                        <div class="row">
                            <div class="col-12">
                                <div class="card">
                                    <div class="card-body">
                                        <h4 class="header-title">Issue Ticket</h4>

                                        <div>
                                            <h2>Scan or Upload QR Code</h2>

                                            <!-- Live Scanner -->
                                            <div id="qr-reader" style="width: 300px;"></div>

                                            <!-- File Upload Scanner -->
                                            <div style="margin-top: 20px;">
                                                <input type="file" id="qr-file-input" accept="image/*" />
                                            </div>

                                            <!-- Display scanned data -->
                                            <div id="qr-result" style="margin-top: 20px;">
                                                <h4>Scanned QR Code Data:</h4>
                                                <pre id="decoded-data">Waiting for scan...</pre>
                                            </div>
                                        </div>

                                        <hr>

                                        <div id="ticket-details" style="margin-top: 20px;"></div>


                                    </div> </div> </div>
                        </div>
                        </div> </div>

            </div>
            <%- include('../../layouts/staff-footer.ejs') %>

 <script src="https://unpkg.com/html5-qrcode"></script>

<script>
  const qrResult = document.getElementById('decoded-data');
  const ticketDetails = document.getElementById("ticket-details");

  const html5QrCode = new Html5Qrcode("qr-reader");
  const config = { fps: 10, qrbox: 250 };

  async function handleDecodedData(decodedText) {
    let scannedData;
    try {
      scannedData = JSON.parse(decodedText);
      qrResult.textContent = JSON.stringify(scannedData, null, 2);
    } catch (err) {
      qrResult.textContent = "Invalid QR data.";
      return;
    }

    const { orderId, ticketTypeId } = scannedData;

    try {
      const res = await fetch("/api/ticket/verify", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ orderId, ticketTypeId })
      });

      if (!res.ok) throw new Error("Verification failed");

      const { eventName, ticketTypeName, seats } = await res.json();

      renderTicketDetails(orderId, eventName, ticketTypeName, seats);
    } catch (err) {
      ticketDetails.innerHTML = `<p style="color: red;">‚ùå Failed to verify ticket info from backend.</p>`;
    }
  }

  function renderTicketDetails(orderId, eventName, ticketTypeName, seats) {
    ticketDetails.innerHTML = `
      <h4>üé´ Event: ${eventName}</h4>
      <h5>Ticket Type: ${ticketTypeName}</h5>
      <ul>
        ${seats.map(seat => `
          <li id="seat-${seat.seatId}">
            Seat: <strong>${seat.seatId}</strong>
            ${
              seat.status === "issued"
                ? `<span style="color: green;">‚úÖ Already Issued</span>`
                : `<button onclick="issueTicket('${orderId}', '${seat.seatId}')">Issue Ticket</button>
                   <span id="status-${seat.seatId}" style="margin-left: 10px;"></span>`
            }
          </li>
        `).join("")}
      </ul>
    `;
  }

  async function issueTicket(orderId, seatId) {
    try {
      const res = await fetch("/api/ticket/issue", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ orderId, seatId })
      });

      const result = await res.json();
      const statusEl = document.getElementById(`status-${seatId}`);
      statusEl.innerText = result.message || '‚úÖ Issued';

      // Disable the button
      const button = document.querySelector(`#seat-${seatId} button`);
      button.disabled = true;
      button.style.opacity = 0.5;
    } catch (err) {
      document.getElementById(`status-${seatId}`).innerText = "‚ùå Error issuing";
    }
  }

  // === LIVE SCAN ===
  Html5Qrcode.getCameras().then(cameras => {
    if (cameras && cameras.length) {
      html5QrCode.start(
        { facingMode: "environment" },
        config,
        (decodedText) => {
          html5QrCode.stop(); // Optional: stop scanning after 1 scan
          handleDecodedData(decodedText);
        },
        () => {}
      );
    } else {
      alert("No cameras found.");
    }
  });

  // === FILE SCAN ===
  const fileInput = document.getElementById('qr-file-input');
  fileInput.addEventListener('change', async (e) => {
    const file = e.target.files[0];
    if (!file) return;

    try {
      const decodedText = await html5QrCode.scanFile(file, true);
      handleDecodedData(decodedText);
    } catch (err) {
      qrResult.textContent = "‚ùå Failed to scan QR code from image.";
      console.error("QR scan file error: ", err);
    }
  });
</script>
