<%- include('../../layouts/staff-header.ejs') %>
<div class="content-page">
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="header-title">Issue Ticket (Manual)</h4>

                            <form class="mt-4" method="GET" action="/staff/issue-tickets-manual">
                                <% if (success) { %>
                                    <div class="alert alert-success"><%= success %></div>
                                <% } %>
                                <% if (error) { %>
                                    <div class="alert alert-danger"><%= error %></div>
                                <% } %>

                                <div class="row">
                                    <div class="col-md-4 mb-3">
                                        <label class="form-label">Search (Name/NIC) <span style="color:red;"> *</span></label>
                                        <input type="text" class="form-control" name="name_nic" placeholder="Enter Name or NIC" value="<%= formData.name_nic || '' %>">
                                        <% if (validationErrors?.name_nic) { %>
                                            <small class="text-danger"><%= validationErrors.name_nic[0] %></small>
                                        <% } %>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary">Search</button>
                            </form>

                            <% if (orders && orders.length > 0) { %>
                                <div class="mt-4">
                                    <h4>Search Results</h4>
                                    <table class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Order ID</th>
                                                <th>Customer Name</th>
                                                <th>NIC/Passport</th>
                                                <th>Event Name</th>
                                                <th>Status</th>
                                                <th>Total</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% orders.forEach(order => { %>
                                                <tr>
                                                    <td><%= order.id %></td>
                                                    <td><%= order.first_name %> <%= order.last_name %></td>
                                                    <td><%= order.nic_passport %></td>
                                                    <td><%= order.eventName %></td> 
                                                    <td><%= order.status %></td>
                                                    <td><%= order.total %></td>
                                                    <td>
                                                        <button type="button" class="btn btn-info btn-sm view-btn" data-order-id="<%= order.id %>" data-event-id="<%= order.event_id %>">View</button>
                                                    </td>
                                                </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                            <% } else if (typeof formData.name_nic !== 'undefined' && orders.length === 0) { %>
                                <div class="alert alert-warning mt-4">
                                    No orders found for the given search criteria.
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="orderDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<%- include('../../layouts/staff-footer.ejs') %>
<script>

    async function issueSeatTicket(orderId, seatId) {
        try {
            const res = await fetch("/staff/confirm-ticket-issue", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ orderId, seatId })
            });

            const result = await res.json();
            const statusEl = document.getElementById(`status-${seatId}`);
            const listItem = document.getElementById(`seat-ticket-${seatId}`);

            if (res.ok) {
                if (listItem) {
                    const button = listItem.querySelector('button');
                    if (button) button.remove();
                    const badge = listItem.querySelector('.badge');
                    if(badge) {
                        badge.classList.remove('badge-warning');
                        badge.classList.add('badge-success');
                        badge.textContent = 'issued';
                    }
                }
                if (statusEl) statusEl.innerHTML = '<span style="color: green;">✅ Issued</span>';
            } else {
                if (statusEl) statusEl.innerText = `❌ ${result.message || 'Error issuing'}`;
            }
        } catch (err) {
            const errorStatusEl = document.getElementById(`status-${seatId}`);
            if (errorStatusEl) errorStatusEl.innerText = "❌ Network error or server issue.";
            console.error("Error issuing seat ticket:", err);
        }
    }


    async function issueNoSeatTickets(orderId, ticketTypeId, inputElementId) {
        const issueCountInput = document.getElementById(inputElementId);
        const countToIssue = parseInt(issueCountInput.value);
        const statusEl = document.getElementById(`status-no-seat-${ticketTypeId}`);
        const cardBody = issueCountInput.closest('.card-body');
        
        console.log(countToIssue);

        if (isNaN(countToIssue) || countToIssue <= 0) {
            if (statusEl) {
                statusEl.innerText = "❌ Invalid number.";
                statusEl.style.color = "red";
            }
            return;
        }

        try {
            const res = await fetch("/staff/issue-no-seat-tickets", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    orderId: orderId,
                    ticketTypeId: ticketTypeId,
                    countToIssue: countToIssue,
                })
            });

            const result = await res.json();

            if (res.ok) {
                if (statusEl) statusEl.innerHTML = '<span style="color: green;">✅ Issued</span>';
                
                const issuedCountEl = cardBody.querySelector('.issued-count');
                const newIssuedCount = parseInt(issuedCountEl.textContent) + countToIssue;
                const remainingCountEl = issuedCountEl.nextElementSibling;
                const newRemaining = parseInt(issueCountInput.max) - countToIssue;
                
                issuedCountEl.textContent = newIssuedCount;
                remainingCountEl.textContent = newRemaining;

                issueCountInput.max = newRemaining;
                
                if (newRemaining <= 0) {
                    cardBody.innerHTML = `<p style="color: green;">✅ All tickets for this type have been issued.</p>`;
                }
            } else {
                if (statusEl) {
                    statusEl.innerText = `❌ ${result.message || 'Error issuing'}`;
                    statusEl.style.color = "red";
                }
            }
        } catch (err) {
            if (statusEl) {
                statusEl.innerText = "❌ Network error or server issue.";
                statusEl.style.color = "red";
            }
            console.error("Error issuing no-seat ticket:", err);
        }
    }


    function renderOrderDetailsInModal(order, event, allTickets) {
        const orderDetailsContent = document.getElementById("orderDetailsContent");
        let ticketsHtml = '';

        // Render seated tickets
        if (allTickets.seated.length > 0) {
            ticketsHtml += `
                <div class="mt-4">
                    <h5>Seated Tickets</h5>
                    <ul class="list-group">
                        ${allTickets.seated.map(ticket => `
                            <li id="seat-ticket-${ticket.seatId}" class="list-group-item">
                                Ticket Type: <strong>${ticket.ticketTypeName}</strong>, Seat: <strong>${ticket.seatId}</strong>
                                <span class="badge badge-${ticket.status === 'issued' ? 'success' : 'warning'} float-right">${ticket.status}</span>
                                <div class="float-right mr-3">
                                    ${ticket.status === 'issued'
                                        ? '<span style="color: green;">✅ Already Issued</span>'
                                        : `<button onclick="issueSeatTicket('${order.id}', '${ticket.seatId}')" class="btn btn-warning btn-sm">Issue</button>`
                                    }
                                    <span id="status-${ticket.seatId}"></span>
                                </div>
                            </li>
                        `).join('')}
                    </ul>
                </div>
            `;
        }

        // Render un-seated tickets
        if (allTickets.withoutSeats.length > 0) {
            ticketsHtml += `
                <div class="mt-4">
                    <h5>Non-Seated Tickets</h5>
                    ${allTickets.withoutSeats.map(ticket => `
                        <div id="no-seat-ticket-${ticket.ticket_type_id}" class="card mt-2">
                            <div class="card-body">
                                <h6>Ticket Type: ${ticket.ticket_type_name}</h6>
                                <p>Total: <strong>${ticket.ticket_count}</strong>, Issued: <strong class="issued-count">${ticket.issued_count || 0}</strong>, Remaining: <strong>${ticket.ticket_count - (ticket.issued_count || 0)}</strong></p>
                                <div class="form-group row">
                                    <div class="col-sm-6">
                                        <label for="issueCount-${ticket.ticket_type_id}">Tickets to Issue:</label>
                                        <input type="number" id="issueCount-${ticket.ticket_type_id}" class="form-control" value="1" min="1" max="${ticket.ticket_count - (ticket.issued_count || 0)}">
                                    </div>
                                    <div class="col-sm-6 d-flex align-items-end">
                                        <button onclick="issueNoSeatTickets('${order.id}', '${ticket.ticket_type_id}', 'issueCount-${ticket.ticket_type_id}')" class="btn btn-warning btn-sm">Issue Tickets</button>
                                        <span id="status-no-seat-${ticket.ticket_type_id}" class="ml-2"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            `;
        }
        
        orderDetailsContent.innerHTML = `
            <h4>Order #${order.id}</h4>
            <p class="mb-0"><strong>Event:</strong> ${event.name}</p>
            <p class="mb-0"><strong>Customer Name:</strong> ${order.first_name} ${order.last_name}</p>
            <p class="mb-0"><strong>Email:</strong> ${order.email}</p>
            <p class="mb-0"><strong>Contact Number:</strong> ${order.contact_number}</p>
             <p class="mb-0"><strong>NIC/Passport:</strong> ${order.nic_passport}</p>
            <p><strong>Status:</strong> <span class="badge badge-pill bg-info">${order.status}</span></p>
            <hr>
            ${ticketsHtml}
        `;
    }

    // This is the event listener that needs to be at the bottom
    document.addEventListener('DOMContentLoaded', () => {
        const orderDetailsContent = document.getElementById("orderDetailsContent");

        document.querySelectorAll('.view-btn').forEach(button => {
            button.addEventListener('click', async (e) => {
                const orderId = e.target.dataset.orderId;
                const eventId = e.target.dataset.eventId;

                try {
                    const res = await fetch("/staff/get-order-tickets", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ orderId, eventId })
                    });

                    if (!res.ok) {
                        const errorData = await res.json();
                        throw new Error(errorData.message || "Failed to fetch order details.");
                    }

                    const { order, event, allTickets } = await res.json();
                    renderOrderDetailsInModal(order, event, allTickets);
                    $('#orderDetailsModal').modal('show');
                } catch (err) {
                    orderDetailsContent.innerHTML = `<p style="color: red;">❌ Error: ${err.message}</p>`;
                    $('#orderDetailsModal').modal('show');
                    console.error("Error fetching order details:", err);
                }
            });
        });
    });
</script>